name: PR Review Notification with Diff

on:
  pull_request_review:
    types: [submitted, edited, dismissed]

jobs:
  notify-api:
    runs-on: ubuntu-latest
    steps:
      - name: Send PR Review and Diff to API
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
        uses: actions/github-script@v6
        with:
          script: |
            const fetch = require('node-fetch'); // This line is not necessary if using Node.js 17.5 or later
            const githubToken = process.env.GITHUB_TOKEN;
            const prReview = context.payload.review;
            const prNumber = context.payload.pull_request.number;
            const repoName = context.payload.repository.full_name;
            const repoOwner = context.payload.repository.owner.login;

            // GitHub API endpoint to get the PR diff
            const diffUrl = `https://api.github.com/repos/${repoOwner}/${repoName}/pulls/${prNumber}`;

            // Fetch PR diff using Fetch API
            fetch(diffUrl, {
              headers: {
                'Accept': 'application/vnd.github.v3.diff',
                'Authorization': `Bearer ${githubToken}`,
              },
            })
            .then(response => response.text())
            .then(prDiff => {
              // Define your API endpoint here
              const apiEndpoint = 'https://your-api-endpoint.com/path';

              // Customize this payload as needed
              const payload = {
                prNumber: prNumber,
                repoName: repoName,
                reviewId: prReview.id,
                reviewState: prReview.state,
                reviewBody: prReview.body,
                prDiff: prDiff, // Including the PR diff in the payload
              };

              // Make the API request
              return fetch(apiEndpoint, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify(payload),
              });
            })
            .then(response => console.log(`Status: ${response.status}`))
            .catch(error => console.error(`Error: ${error.toString()}`));
