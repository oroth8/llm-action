name: PR Review Notification with Diff

on:
  pull_request_review:
    types: [submitted, edited, dismissed]

jobs:
  notify-api:
    runs-on: ubuntu-latest
    steps:
      - name: Send PR Review and Diff to API
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN  }}
        uses: actions/github-script@v7
        with:
          script: |
            const githubToken = process.env.GITHUB_TOKEN;
            const prReview = context.payload.review;
            const prNumber = context.payload.pull_request.number;
            const repoName = context.payload.repository.full_name;
            const repoOwner = context.payload.repository.owner.login;

            // GitHub API endpoint to get the PR diff
            const diffUrl = `https://api.github.com/repos/${repoName}/pulls/${prNumber}`;
            console.log({diffUrl})

            // Fetch PR diff using Fetch API
            fetch(diffUrl, {
              headers: {
                'Accept': 'application/vnd.github.v3.diff',
                'Authorization': `Bearer ${githubToken}`,
              },
            })
            .then(response => response.text())
            .then(prDiff => {
              console.log(prDiff);
              const apiEndpoint = 'https://code-digester-006167766c6e.herokuapp.com/llm/add-pr-data';

              // Customize this payload as needed
              const payload = {
                prNumber: prNumber,
                repoName: repoName,
                reviewId: prReview.id,
                reviewState: prReview.state,
                reviewBody: prReview.body,
                prDiff: prDiff,
              };

              // Make the API request
              return fetch(apiEndpoint, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify(payload),
              });
            })
            .then(response => response.json())
            .then(data => {
                  const commentBody = `API Response: ${JSON.stringify(data, null, 2)}`;
                  return github.rest.issues.createComment({
                    owner: repoOwner,
                    repo: repoName,
                    issue_number: prNumber,
                    body: commentBody,
                  });
                })
              .then(response => console.log(`Comment posted: ${response.data.html_url}`))
              .catch(error => console.error(`Error: ${error.toString()}`));
